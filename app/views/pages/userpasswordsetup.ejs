<!DOCTYPE html>
<html>

<head>
	<% include ../partials/shared/head %>
	<style>
		.jquery-invalid {
			display: block !important;
		}
	</style>
</head>

<body class="gray-bg">
	<div class="middle-box text-center loginscreen animated fadeInDown">
		<div>
			<div>
				<h1 class="logo-name">LF</h1>
			</div>
			<h3>Welcome to Leap Framework</h3>
			<p>Please setup your password</p>
			<form id="password-form" class="m-t" role="form" data-bind="submit: submit, validate">
				<div class="form-group">
					<input id="password" name="password" data-bind="value: password" type="password" class="form-control" placeholder="Password">
				</div>
				<div class="form-group">
					<input name="confirmpassword" data-bind="value: confirmPassword" type="password" class="form-control" placeholder="Confirm Password">
				</div>
				<button type="submit" class="btn btn-primary block full-width m-b">Submit</button>
			</form>
		</div>
	</div>

	<script type="text/javascript">
		function PasswordSetupViewModel() {
			var _this = this;
			
			_this.password = ko.observable();
			_this.confirmPassword = ko.observable();
			_this.submit = function () {
				if ($('#password-form').valid()) {
					$.ajax({
						type: "POST",
						url: window.location.href,
						contentType: 'application/json; charset=utf8',
						dataType: 'json',
						data: JSON.stringify({ pass: _this.password() }),
						success: function (result) {
							if (result.success) {
								setTimeout(function () {
									toastr.options = {
										closeButton: true,
										progressBar: true,
										showMethod: 'slideDown',
										timeOut: 4000
									};
									toastr.success('Password successfully set. Redirecting...', 'User Verification');
									setTimeout(function() {
										window.location = '/login';
									}, 3000)
								}, 500);
							}
						}
					});
				}
			}

			ko.bindingHandlers.validate = {
				init: function(element, valueAccessor) {
					$(element).validate({
						errorClass: 'error jquery-invalid',
						rules: {
							password: {
								required: true,
								minlength: 8,
								maxlength: 15
							},
							confirmpassword: {
								required: true,
								equalTo: '#password'
							}
						},
						messages: {
							confirmpassword: {
								equalTo: 'Password does not match.'
							}
						}
					})
				}
			}
		};

		ko.applyBindings(new PasswordSetupViewModel());

	</script>
	
	<% include ../partials/shared/scripts %>
</body>
</html>